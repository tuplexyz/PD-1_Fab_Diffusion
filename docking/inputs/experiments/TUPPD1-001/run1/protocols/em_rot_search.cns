module(Data; 
       Saprotocol; 
       Toppar;
       )
    {*Module optimizes the orientation of binary systems in the EM-density

    The orientation is optimized by a fine rotation search of the axis that is
    formed by the line that joins the two centroids. The XREF energy is
    calculated at every orientation to differentiate.

    Parameters
    ----------
    Data
        The Data object

    Toppar
        The Toppar object

    Notes
    -----
    The module uses the COMP coordinate set
    The MAIN coordinate set are set to the orientation with the lowest XREF energy

    *}

    eval($time0 = $CPU)

    ! Copy main coordinates to the comp set
    coor copy selection=(all) end

    ! Get rotation axis used for search.  ! It is the line that is made by
    ! joining the two centroids
    show (x) (name DUM and segid &Toppar.prot_segid_1)
    eval($x1 = $result)
    show (x) (name DUM and segid &Toppar.prot_segid_2)
    eval($x2 = $result)
    eval($rot_axis.x = $x1 - $x2)

    show (y) (name DUM and segid &Toppar.prot_segid_1)
    eval($y1 = $result)
    show (y) (name DUM and segid &Toppar.prot_segid_2)
    eval($y2 = $result)
    eval($rot_axis.y = $y1 - $y2)

    show (z) (name DUM and segid &Toppar.prot_segid_1)
    eval($z1 = $result)
    show (z) (name DUM and segid &Toppar.prot_segid_2)
    eval($z2 = $result)
    eval($rot_axis.z = $z1 - $z2)

    ! Set the XREF flag to calculate the cross correlation potential in CNS
    flags include xref end
    ! Initialize the search values
    eval($angle = 0)
    eval($bestangle = 0)
    eval($anglestep = 6)
    eval($best_fit_energy = 9999)

    while ($angle < 360.0) loop loopsearch

        ! Rotate the system around the axis that is formed
        ! by the line created by joining the two centroids.
        coor rotate
             center=($x1 $y1 $z1)
             selection=(not name MAP)
             axis ($rot_axis.x $rot_axis.y $rot_axis.z) $angle
        end

        ! Calculate the XREF energy
        energy end

        ! XREF is internally calculated by CNS
        if ($XREF < $best_fit_energy) then
            ! Update optimal parameters
            eval($best_fit_energy = $XREF)
            eval($bestangle = $angle)
        end if

        eval($angle = $angle + $anglestep)

        ! Copy the original locations to the main coordinate set
        coor swap end
        coor copy end

    end loop loopsearch

    ! Reorient the original coordinates to the best fit values
    coor rotate
        center=($x1 $y1 $z1)
        selection=(not name MAP)
        axis ($rot_axis.x $rot_axis.y $rot_axis.z) $bestangle
    end

    ! Calculate the energy to check
    energy end

    ! Turn off the XREF energy term again
    flags exclude xref end

    ! Show the time required for the search
    eval($time0 = $CPU - $time0)
    display Time used for rotational search: $time0 s
