! generate_complex.inp
!    Merge the coordinates and topologies of the various components of the complex
!
! ***********************************************************************
! * Copyright 2003-2018 Alexandre Bonvin, Utrecht University.           *
! * All rights reserved.                                                *
! * This code is part of the HADDOCK software and governed by its       *
! * license. Please see the LICENSE file that should have been included *
! * as part of this package.                                            *
! ***********************************************************************
!
!
{- begin block parameter definition -} define(

{================== parameter files ===================}

{* protein parameter file *}
{===>} prot_parameter_infile="RUN:toppar/protein-allhdg5-4.param";

{* nucleic acid parameter file *}
{===>} nucl_parameter_infile="RUN:/toppar/dna-rna-allatom-hj-opls-1.3.param";

{* carbohydrate parameter file *}
{===>} carbo_parameter_infile="RUN:/toppar/carbohydrate.param";

{* solvent parameter file *}
{===>} solv_parameter_infile="RUN:/toppar/water-allhdg5-4.param";

{* co-factor parameter file *}
{===>} cofac_parameter_infile="RUN:/toppar/ligand.param";

{* ligands parameter file *}
{===>} ligands_parameter_infile="RUN:/toppar/fragment_probes.param";

{* ion parameter file *}
{===>} ion_parameter_infile="RUN:/toppar/ion.param";

{* heme parameter file *}
{===>} heme_parameter_infile="RUN:/toppar/hemes-allhdg.param";

 ) {- end block parameter definition -}


@RUN:protocols/initialize.cns(iteration=$iteration;)
@RUN:begin/iteration.cns(iteration=$iteration;)
@RUN:run.cns(
iteration =$iteration;
filenames =$filenames;
Data      =$Data;
iterations=$iterations;
saprotocol=$saprotocol;
refine    =$refine;
toppar    =$toppar;
analysis  =$analysis;)


! Read in parameter files
parameter
   if ( &BLANK%prot_parameter_infile = false ) then
     @@&prot_parameter_infile
   end if
   if ( &BLANK%ion_parameter_infile = false ) then
     @@&ion_parameter_infile
   end if
   if ( &BLANK%nucl_parameter_infile = false ) then
     @@&nucl_parameter_infile
   end if
   if ( &BLANK%carbo_parameter_infile = false ) then
     @@&carbo_parameter_infile
   end if
   if ( &BLANK%solv_parameter_infile = false ) then
     @@&solv_parameter_infile
   end if
   if ( &BLANK%ligands_parameter_infile = false ) then
     @@&ligands_parameter_infile
   end if
   if ( &BLANK%cofac_parameter_infile = false ) then
     @@&cofac_parameter_infile
   end if
   if ( &BLANK%heme_parameter_infile = false ) then
     @@&heme_parameter_infile
   end if
end

! Read in topologies
eval($nchain1 = 0)
while ($nchain1 < $data.ncomponents) loop cloop1
  eval($nchain1 = $nchain1 + 1)
  evaluate($psf_infile_$nchain1= "RUN:begin/" + $Toppar.prot_root_$nchain1 + ".psf")
  structure
    @@$psf_infile_$nchain1
  end
end loop cloop1

! Write structures of complexes
evaluate ($nstruc = 1)
evaluate ($nline = 0)

for $molecule in ( @@RUN:begin/combinations.list ) loop write_complexes
    evaluate ($nline = $nline + 1)
    evaluate ($nummod = mod($nline, $data.ncomponents))

    coor @@$molecule
    
    if ($nummod eq 0) then
      if ($saprotocol.rebuildcplx eq true) then
        do (store9=0) (all)
        do (store9=1) (attr q=0.0)
        @RUN:protocols/rebuild-unknown.cns
      end if

      evaluate ($coorfile_$nstruc = "RUN:begin/" + $Filenames.fileroot + "_" + encode($nstruc) + ".pdb")

      do (q=1) (all)
      do (b=10) (all)
      write coor format=pdbo output=$coorfile_$nstruc end
      evaluate ($nstruc = $nstruc + 1)
    end if

end loop write_complexes

! Write complex topology (one is enough)
evaluate ($structurefile = "RUN:begin/" + $Filenames.fileroot + ".psf")
write structure output=$structurefile end
stop   
