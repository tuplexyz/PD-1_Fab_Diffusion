{Sets the centroid based distance restraints}

if ($iteration = 0) then

  noe
    ! define a new class for the centroid based distance restraints
    class       centroid 
    averaging   centroid sum 
    potential   centroid soft
    scale       centroid $Data.centroids.kscale
    sqconstant  centroid 1.0
    sqexponent  centroid 2
    soexponent  centroid 1
    rswitch     centroid 1.0
    sqoffset    centroid 0.0
    asymptote   centroid 2.0
    msoexponent centroid 1
    masymptote  centroid -0.1
    mrswitch    centroid 1.0

    ! set the restraints between each DUM and MAP atom for each chain. in case
    ! of ambiguous restraints, each DUM atom is assigned with all MAP atoms
    evaluate($nchain1 = 0)
    while ($nchain1 < $Data.ncomponents) loop distloop
        evaluate($nchain1 = $nchain1 + 1)

        if ($Data.centroids.ambi_$nchain1 = true) then
            assign (name MAP)
                   ((name DUM) and (segid $Toppar.prot_segid_$nchain1)) 0.0 0.0 0.0
        else
            assign ((name MAP) and (segid $Toppar.prot_segid_$nchain1))
                   ((name DUM) and (segid $Toppar.prot_segid_$nchain1)) 0.0 0.0 0.0
        end if
    end loop distloop
  end
end if

if ($iteration > 0) then

! define centroid based distance restraints for expand/refine protocol

  noe
    ! define a new class for the centroid based distance restraints
    class       centroid 
    averaging   centroid center
    potential   centroid soft
    scale       centroid $Data.centroids.kscale
    sqconstant  centroid 1.0
    sqexponent  centroid 2
    soexponent  centroid 1
    rswitch     centroid 1.0
    sqoffset    centroid 0.0
    asymptote   centroid 2.0
    msoexponent centroid 1
    masymptote  centroid -0.1
    mrswitch    centroid 1.0

    ! set the restraints between the heavy atoms of each chain and the
    ! initially stored center of mass of each chain
    evaluate($nchain1 = 0)
    while ($nchain1 < $Data.ncomponents) loop distloop
        evaluate($nchain1 = $nchain1 + 1)

        assign (not name H* and not name DUM and segid $Toppar.prot_segid_$nchain1)
               (name DUM and segid $Toppar.prot_segid_$nchain1) 0.0 0.0 0.0
    end loop distloop
  
  end

end if
